//-------------------------------------
//  # 3. Genéricos
//
// É nesta camada que fica o código que deve definir regras muito genéricas. 
// Usá-la para colocar um reset ou um normalize.
//-------------------------------------

// Cores
.md-color-stf-primary
	color: $stf-color-primary

// Sombras
.z-depth-0
	box-shadow: none !important

.z-depth-1
	box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12)

.z-depth-2
	box-shadow: 0 8px 17px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)

.z-depth-3
	box-shadow: 0 12px 15px 0 rgba(0, 0, 0, 0.24), 0 17px 50px 0 rgba(0, 0, 0, 0.19)

.z-depth-4
    box-shadow: 0 16px 28px 0 rgba(0, 0, 0, 0.22), 0 25px 55px 0 rgba(0, 0, 0, 0.21)

.z-depth-5
    box-shadow: 0 27px 24px 0 rgba(0, 0, 0, 0.2), 0 40px 77px 0 rgba(0, 0, 0, 0.22)

/**
 * Gera classes .stf-padding-x-y, análogas ao .uk-margin-x-y
 * São classes utilitárias para adicionar padding em um elemento.
 *
 * x : Indica o tamanho do padding, podendo ser "-small", "-large" ou nada
 * y : Indica a lateral em que será aplicado o padding. Quando nada, aplica 
 *     em todos. Pode ser: -top, -right, -bottom, -left ou nada.
 */
@each $prefix, $size in (-small, 8px), ("", 16px), (-large, 48px)
	.stf-padding#{$prefix}
		padding: $size
	
	@each $side in top, right, bottom, left
		.stf-padding#{$prefix}-#{$side}
			padding-#{$side}: $size